<?php

namespace Apicycle\Common\Exception\Stream;

use Apicycle\Common\Exception\InvalidArgumentValueException;
use Exception;

/**
 * Designed to be thrown whenever invalid seek offset is supported.
 *
 * @codeCoverageIgnore
 *
 * @version 0.1.0
 * @since   0.1.0
 * @package Apicycle\Common\Exception\Stream
 * @author  Etki <etki@etki.name>
 */
class InvalidSeekOffsetException extends InvalidArgumentValueException
{
    /**
     * Real stream length.
     *
     * @type int
     * @since 0.1.0
     */
    protected $streamLength;

    /**
     * @param string         $argumentName  Name of the invalid argument.
     * @param int            $argumentValue Erroneous seek offset value.
     * @param int            $streamLength  Real stream length.
     * @param string|null    $message       Exception message. Will be
     *                                      autogenerated if omitted.
     * @param Exception|null $previous      Previous exception (if any).
     *
     * @return self New instance.
     * @since 0.1.0
     */
    public function __construct(
        $argumentName,
        $argumentValue,
        $streamLength,
        $message = null,
        Exception $previous = null
    ) {
        $this->streamLength = $streamLength;
        if (!$message) {
            $message = $this->composeMessage(
                $argumentName,
                $argumentValue,
                $streamLength
            );
        }
        parent::__construct($argumentName, $argumentValue, $message. $previous);
    }

    /**
     * Generates exception message.
     *
     * @param string $argumentName  Name of the argument.
     * @param mixed  $argumentValue Real value specified as seek offset.
     * @param int    $streamLength  Real stream length.
     *
     * @return string Composed message.
     * @since 0.1.0
     */
    protected function composeMessage(
        $argumentName,
        $argumentValue,
        $streamLength
    ) {
        if (!is_numeric($argumentValue)) {
            return sprintf(
                'Stream seek offset argument `%s` was specified with wrong ' .
                'type `%s`',
                $argumentName,
                gettype($argumentValue)
            );
        }
        return sprintf(
            'Stream seek offset argument `%s` (`%d`) is out of range of ' .
            'possible values (0 - %d)',
            $argumentName,
            $argumentValue,
            $streamLength
        );
    }

    /**
     * Retrieves stream length.
     *
     * @return int
     * @since 0.1.0
     */
    public function getStreamLength()
    {
        return $this->streamLength;
    }
}
